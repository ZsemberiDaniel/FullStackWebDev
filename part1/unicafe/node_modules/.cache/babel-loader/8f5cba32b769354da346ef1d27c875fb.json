{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\FullStackWebDev\\\\FullStackWebDev\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInput = ({\n  onGoodClicked,\n  onNeutralClicked,\n  onBadClicked\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onGoodClicked,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNeutralClicked,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBadClicked,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserInput;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserInput, {\n      onGoodClicked: () => setGood(good + 1),\n      onNeutralClicked: () => setNeutral(neutral + 1),\n      onBadClicked: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserInput\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Coding/FullStackWebDev/FullStackWebDev/part1/unicafe/src/App.js"],"names":["React","useState","UserInput","onGoodClicked","onNeutralClicked","onBadClicked","App","good","setGood","neutral","setNeutral","bad","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,gBAAjB;AAAmCC,EAAAA;AAAnC,CAAD,KAAuD;AACrE,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEF,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;KAAMH,S;;AAWN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,aAAa,EAAE,MAAMO,OAAO,CAACD,IAAI,GAAG,CAAR,CAAvC;AACY,MAAA,gBAAgB,EAAE,MAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAD9C;AAEY,MAAA,YAAY,EAAE,MAAMG,MAAM,CAACD,GAAG,GAAG,CAAP;AAFtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAbD;;GAAML,G;;MAAAA,G;AAeN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst UserInput = ({ onGoodClicked, onNeutralClicked, onBadClicked }) => {\n    return (\n        <div>\n            <h1>give feedback :)</h1>\n            <button onClick={onGoodClicked}>good</button>\n            <button onClick={onNeutralClicked}>neutral</button>\n            <button onClick={onBadClicked}>bad</button>\n        </div>\n    )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n        <UserInput onGoodClicked={() => setGood(good + 1)}\n                    onNeutralClicked={() => setNeutral(neutral + 1)}\n                    onBadClicked={() => setBad(bad + 1)} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}