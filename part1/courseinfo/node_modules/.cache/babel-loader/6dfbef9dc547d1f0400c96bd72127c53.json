{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\FullStackWebDev\\\\FullStackWebDev\\\\part1\\\\courseinfo\\\\src\\\\App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = course => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Header;\n\nconst Part = part => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [part.name, \" \", part.exerciseCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}; // const Content = (contents) => {\n//     return (\n//         <div>\n//             {contents.parts.map((name, i) => <Part name={name} exerciseCount={contents.exercises[i]} key={i} />)}\n//             </div>\n//     )\n// }\n// I can also do what the exercise said, I just got a bit too excited, sorry\n\n\n_c2 = Part;\n\nconst Content = contents => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      name: contents.parts[0],\n      exerciseCount: contents.exercises[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      name: contents.parts[1],\n      exerciseCount: contents.exercises[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      name: contents.parts[2],\n      exerciseCount: contents.exercises[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = total => {\n  let pointSum = 0;\n\n  for (let i = 0; i < total.exerciseCounts.length; i++) {\n    pointSum += total.exerciseCounts[i];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", pointSum]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const parts = [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    name: 'Using props to pass data',\n    exercises: 7\n  }, {\n    name: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Coding/FullStackWebDev/FullStackWebDev/part1/courseinfo/src/App.js"],"names":["React","Header","course","name","Part","part","exerciseCount","Content","contents","parts","exercises","Total","total","pointSum","i","exerciseCounts","length","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAIC,MAAD,IAAY;AACvB,sBAAQ;AAAA,2BACJ;AAAA,gBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAGH,CAJD;;KAAMF,M;;AAMN,MAAMG,IAAI,GAAIC,IAAD,IAAU;AACnB,sBACI;AAAA,2BACI;AAAA,iBAAIA,IAAI,CAACF,IAAT,OAAgBE,IAAI,CAACC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;MAhBMF,I;;AAiBN,MAAMG,OAAO,GAAIC,QAAD,IAAc;AAC1B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAZ;AAA+B,MAAA,aAAa,EAAED,QAAQ,CAACE,SAAT,CAAmB,CAAnB;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAZ;AAA+B,MAAA,aAAa,EAAED,QAAQ,CAACE,SAAT,CAAmB,CAAnB;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAZ;AAA+B,MAAA,aAAa,EAAED,QAAQ,CAACE,SAAT,CAAmB,CAAnB;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;MAAMH,O;;AAUN,MAAMI,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,cAAN,CAAqBC,MAAzC,EAAiDF,CAAC,EAAlD,EACA;AACID,IAAAA,QAAQ,IAAID,KAAK,CAACG,cAAN,CAAqBD,CAArB,CAAZ;AACH;;AACD,sBACI;AAAA,uCAAwBD,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CATD;;MAAMF,K;;AAWN,MAAMM,GAAG,GAAG,MAAM;AACd,QAAMf,MAAM,GAAG,oCAAf;AACA,QAAMO,KAAK,GAAG,CACV;AACEN,IAAAA,IAAI,EAAE,uBADR;AAEEO,IAAAA,SAAS,EAAE;AAFb,GADU,EAKV;AACEP,IAAAA,IAAI,EAAE,0BADR;AAEEO,IAAAA,SAAS,EAAE;AAFb,GALU,EASV;AACEP,IAAAA,IAAI,EAAE,sBADR;AAEEO,IAAAA,SAAS,EAAE;AAFb,GATU,CAAd;AAeF,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;MAAMQ,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React from 'react'\n\nconst Header = (course) => {\n    return (<>\n        <h1>{course.name}</h1>\n    </>)\n}\n\nconst Part = (part) => {\n    return (\n        <div>\n            <p>{part.name} {part.exerciseCount}</p>\n        </div>\n    )\n}\n\n// const Content = (contents) => {\n//     return (\n//         <div>\n//             {contents.parts.map((name, i) => <Part name={name} exerciseCount={contents.exercises[i]} key={i} />)}\n//             </div>\n//     )\n// }\n\n// I can also do what the exercise said, I just got a bit too excited, sorry\nconst Content = (contents) => {\n    return (\n        <div>\n            <Part name={contents.parts[0]} exerciseCount={contents.exercises[0]} />\n            <Part name={contents.parts[1]} exerciseCount={contents.exercises[1]} />\n            <Part name={contents.parts[2]} exerciseCount={contents.exercises[2]} />\n        </div>\n    )\n}\n\nconst Total = (total) => {\n    let pointSum = 0;\n    for (let i = 0; i < total.exerciseCounts.length; i++)\n    {\n        pointSum += total.exerciseCounts[i];\n    }\n    return (\n        <p>Number of exercises {pointSum}</p>\n    )\n}\n\nconst App = () => {\n    const course = 'Half Stack application development'\n    const parts = [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7\n        },\n        {\n          name: 'State of a component',\n          exercises: 14\n        }\n      ]\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content parts={parts} />\n      <Total parts={parts} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}