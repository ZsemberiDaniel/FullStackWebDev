{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\FullStackWebDev\\\\FullStackWebDev\\\\part2\\\\countries\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilterCountries = ({\n  filter,\n  onFilterChanged\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filter,\n      onChange: onFilterChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FilterCountries;\n\nconst DisplayLanguage = ({\n  language\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: language.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = DisplayLanguage;\n\nconst Weather = ({\n  capital\n}) => {\n  _s();\n\n  const api_key = process.env.REACT_APP_API_KEY;\n  useEffect(() => axios.get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`).then(response => {\n    setWeatherData(response.data.current);\n  }), []);\n\n  if (weatherData === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this);\n  } else {\n    console.log(weatherData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"temperature: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this), \" \", weatherData.temperature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), weatherData.weather_icons.map(iconUrl => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 59\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"wind: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this), \" \", weatherData.wind_speed, \" mph with direction \", weatherData.wind_dir]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Weather, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = Weather;\n\nconst FullCountry = ({\n  country\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: country.languages.map(language => /*#__PURE__*/_jsxDEV(DisplayLanguage, {\n        language: language\n      }, language[\"iso639_1\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 52\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flag,\n      alt: `Flag of ${country.name}`,\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {\n      capital: country.capital\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = FullCountry;\n\nconst Country = ({\n  country,\n  onShowCountryPressed\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [country.name, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onShowCountryPressed(country.numericCode),\n      children: country.shown ? \"hide\" : \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), country.shown ? /*#__PURE__*/_jsxDEV(FullCountry, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Country;\n\nconst DisplayCoutnries = ({\n  countries,\n  filter,\n  onShowCountryPressed\n}) => {\n  const displayedCountries = filter === '' ? countries : countries.filter(country => country.name.toLowerCase().includes(filter.toLowerCase()));\n\n  if (displayedCountries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  } else if (displayedCountries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FullCountry, {\n        country: displayedCountries[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayedCountries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        onShowCountryPressed: onShowCountryPressed\n      }, country.numericCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 52\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c6 = DisplayCoutnries;\n\nconst App = () => {\n  _s2();\n\n  const [countries, setCountries] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  function onFilterChanged(event) {\n    setFilter(event.target.value);\n  }\n\n  function onShowCountryPressed(id) {\n    const newCountries = [...countries];\n\n    for (let i = 0; i < newCountries.length; i++) {\n      if (newCountries[i].numericCode === id) {\n        newCountries[i].shown = !newCountries[i].shown;\n        break;\n      }\n    }\n\n    setCountries(newCountries);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterCountries, {\n      filter: filter,\n      onFilterChanged: onFilterChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayCoutnries, {\n      countries: countries,\n      filter: filter,\n      onShowCountryPressed: onShowCountryPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(App, \"rXPm2WKeIxN3BWonp2vurgNZmf4=\");\n\n_c7 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"FilterCountries\");\n$RefreshReg$(_c2, \"DisplayLanguage\");\n$RefreshReg$(_c3, \"Weather\");\n$RefreshReg$(_c4, \"FullCountry\");\n$RefreshReg$(_c5, \"Country\");\n$RefreshReg$(_c6, \"DisplayCoutnries\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"sources":["C:/Coding/FullStackWebDev/FullStackWebDev/part2/countries/src/App.js"],"names":["useEffect","useState","axios","FilterCountries","filter","onFilterChanged","DisplayLanguage","language","name","Weather","capital","api_key","process","env","REACT_APP_API_KEY","get","then","response","setWeatherData","data","current","weatherData","console","log","temperature","weather_icons","map","iconUrl","wind_speed","wind_dir","FullCountry","country","population","languages","flag","Country","onShowCountryPressed","numericCode","shown","DisplayCoutnries","countries","displayedCountries","toLowerCase","includes","length","App","setCountries","setFilter","event","target","value","id","newCountries","i"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst FilterCountries = ({ filter, onFilterChanged }) => {\n    return (\n        <div>\n            find countries <input value={filter} onChange={onFilterChanged} />\n        </div>\n    )\n}\n\nconst DisplayLanguage = ({ language }) => {\n    return (\n        <><li>{language.name}</li></>\n    )\n}\n\nconst Weather = ({ capital }) => {\n    const api_key = process.env.REACT_APP_API_KEY;\n    useEffect(() => axios\n        .get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`)\n        .then(response => {\n            setWeatherData(response.data.current);\n        }), []);\n\n    if (weatherData === null)\n    {\n        return (<div>Loading weather data...</div>);\n    }\n    else \n    {\n        console.log(weatherData);\n        return (\n            <div>\n                <h3>Weather in {capital}</h3>\n                <p><b>temperature: </b> {weatherData.temperature}</p>\n                {weatherData.weather_icons.map(iconUrl => <img src={iconUrl} width={100} />)}\n                <p><b>wind: </b> {weatherData.wind_speed} mph with direction {weatherData.wind_dir}</p>\n            </div>\n        )\n    }\n}\n\nconst FullCountry = ({ country }) => {\n    return (\n        <div>\n            <h1>{country.name}</h1>\n            <p>Capital {country.capital}</p>\n            <p>Population {country.population}</p>\n\n            <h3>languages</h3>\n            <ul>\n                {country.languages.map(language => <DisplayLanguage language={language} key={language[\"iso639_1\"]} />)}\n            </ul>\n\n            <img src={country.flag} alt={`Flag of ${country.name}`} width=\"200px\"></img>\n\n            <Weather capital={country.capital} />\n        </div>\n    )\n}\n\nconst Country = ({ country, onShowCountryPressed }) => {\n    return (\n        <div>\n            {country.name}\n            <button onClick={() => onShowCountryPressed(country.numericCode)}>{country.shown ? \"hide\" : \"show\"}</button>\n\n            {country.shown ? <FullCountry country={country} /> : <></>}\n        </div>\n    )\n}\n\nconst DisplayCoutnries = ({ countries, filter, onShowCountryPressed }) => {\n    const displayedCountries = \n        filter === '' ? \n        countries : \n        countries.filter(country => country.name.toLowerCase().includes(filter.toLowerCase()));\n\n    if (displayedCountries.length > 10)\n    {\n        return (\n            <div>Too many matches, specify another filter!</div>\n        )\n    }\n    else if (displayedCountries.length === 1)\n    {\n        return (\n            <div>\n                <FullCountry country={displayedCountries[0]} />\n            </div>\n        )\n    }\n    else\n    {\n        return (\n            <div>\n                {displayedCountries.map(country => <Country country={country} key={country.numericCode} onShowCountryPressed={onShowCountryPressed} />)}\n            </div>\n        )\n    }\n}\n\nconst App = () => {\n    const [countries, setCountries] = useState([]);\n    const [filter, setFilter] = useState('');\n\n    useEffect(() => {\n        axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n            setCountries(response.data);\n        })\n    }, []);\n\n    function onFilterChanged(event) {\n        setFilter(event.target.value);\n    }\n\n    function onShowCountryPressed(id)\n    {\n        const newCountries = [...countries];\n        for (let i = 0; i < newCountries.length; i++)\n        {\n            if (newCountries[i].numericCode === id)\n            {\n                newCountries[i].shown = !newCountries[i].shown;\n                break;\n            }\n        }\n        setCountries(newCountries);\n    }\n\n    return (\n        <div>\n            <FilterCountries filter={filter} onFilterChanged={onFilterChanged} />\n            <DisplayCoutnries countries={countries} filter={filter} onShowCountryPressed={onShowCountryPressed} />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}